/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LangIndexImport } from './routes/$lang.index'
import { Route as LangProjectImport } from './routes/$lang.project'
import { Route as LangAboutImport } from './routes/$lang.about'

// Create/Update Routes

const LangIndexRoute = LangIndexImport.update({
  id: '/$lang/',
  path: '/$lang/',
  getParentRoute: () => rootRoute,
} as any)

const LangProjectRoute = LangProjectImport.update({
  id: '/$lang/project',
  path: '/$lang/project',
  getParentRoute: () => rootRoute,
} as any)

const LangAboutRoute = LangAboutImport.update({
  id: '/$lang/about',
  path: '/$lang/about',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang/about': {
      id: '/$lang/about'
      path: '/$lang/about'
      fullPath: '/$lang/about'
      preLoaderRoute: typeof LangAboutImport
      parentRoute: typeof rootRoute
    }
    '/$lang/project': {
      id: '/$lang/project'
      path: '/$lang/project'
      fullPath: '/$lang/project'
      preLoaderRoute: typeof LangProjectImport
      parentRoute: typeof rootRoute
    }
    '/$lang/': {
      id: '/$lang/'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/$lang/about': typeof LangAboutRoute
  '/$lang/project': typeof LangProjectRoute
  '/$lang': typeof LangIndexRoute
}

export interface FileRoutesByTo {
  '/$lang/about': typeof LangAboutRoute
  '/$lang/project': typeof LangProjectRoute
  '/$lang': typeof LangIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$lang/about': typeof LangAboutRoute
  '/$lang/project': typeof LangProjectRoute
  '/$lang/': typeof LangIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$lang/about' | '/$lang/project' | '/$lang'
  fileRoutesByTo: FileRoutesByTo
  to: '/$lang/about' | '/$lang/project' | '/$lang'
  id: '__root__' | '/$lang/about' | '/$lang/project' | '/$lang/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LangAboutRoute: typeof LangAboutRoute
  LangProjectRoute: typeof LangProjectRoute
  LangIndexRoute: typeof LangIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LangAboutRoute: LangAboutRoute,
  LangProjectRoute: LangProjectRoute,
  LangIndexRoute: LangIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$lang/about",
        "/$lang/project",
        "/$lang/"
      ]
    },
    "/$lang/about": {
      "filePath": "$lang.about.tsx"
    },
    "/$lang/project": {
      "filePath": "$lang.project.tsx"
    },
    "/$lang/": {
      "filePath": "$lang.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
